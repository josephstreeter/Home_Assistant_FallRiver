# This file contains Home Assistant automation entities.
# Define automations here - rules that automatically trigger actions based on conditions and triggers.
# Automations consist of triggers (what starts the automation), conditions (optional checks), 
# and actions (what the automation does when triggered).
# Use automations to create smart home behaviors like turning lights on at sunset or sending alerts.
#
# Example automation configuration (commented out):
#
# - id: example_automation
#   alias: 'Example: Motion Light'
#   description: Turn on lights when motion is detected
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.motion_living_room
#       from: 'off'
#       to: 'on'
#   condition:
#     - condition: numeric_state
#       entity_id: sensor.living_room_illuminance
#       below: 50
#   action:
#     - service: light.turn_on
#       target:
#         entity_id: light.living_room
#       data:
#         brightness: 255
#   mode: single

# - id: "Update_dynamic_openings_group"
#   alias: "Update dynamic openings group"
#   trigger:
#     - platform: homeassistant
#       event: start
#   action:
#     - service: group.set
#       data:
#         object_id: all_openings
#         entities: >
#           {{ state_attr('sensor.all_doors_and_windows', 'entities') | join(', ') }}

# - id: "Update_dynamic_windows_group"
#   alias: "Update dynamic windows group"
#   trigger:
#     - platform: homeassistant
#       event: start
#   action:
#     - service: group.set
#       data:
#         object_id: all_windows
#         entities: >
#           {{ state_attr('sensor.all_windows', 'entities') | join(', ') }}

# - id: "Update_dynamic_doors_group"
#   alias: "Update dynamic doors group"
#   trigger:
#     - platform: homeassistant
#       event: start
#   action:
#     - service: group.set
#       data:
#         object_id: all_doors
#         entities: >
#           {{ state_attr('sensor.all_doors', 'entities') | join(', ') }}

# - id: "Update_dynamic_lights_group"
#   alias: "Update dynamic lights group"
#   trigger:
#     - platform: homeassistant
#       event: start
#   action:
#     - service: group.set
#       data:
#         object_id: all_lights
#         entities: >
#           {{ state_attr('sensor.all_lights', 'entities') | join(', ') }}

- id: test_automation_sample
  alias: 'Test: Sample Automation'
  description: A simple test automation that sends a notification every 30 minutes
  trigger:
    - platform: time_pattern
      minutes: '/30'
  condition: []
  action:
    - service: persistent_notification.create
      data:
        title: "Test Automation"
        message: "This is a test notification sent at {{ now().strftime('%H:%M:%S') }}"
        notification_id: "test_automation"
  mode: single